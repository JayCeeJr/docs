<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vela â€“ Steps</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/</link><description>Recent content in Steps on Vela</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://go-vela.github.io/docs/concepts/pipeline/steps/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts: Commands</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/commands/</guid><description>
&lt;p>The &lt;code>commands&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide execution instructions to run inside the container.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: build
image: golang
&lt;span style="color:#00a000">+ commands:
&lt;/span>&lt;span style="color:#00a000">+ - go test ./...
&lt;/span>&lt;span style="color:#00a000">+ - go build
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Using the above example, the provided commands are converted to a simple shell script that looks like:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">&lt;span style="color:#8f5902;font-style:italic">#!/bin/sh
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87">set&lt;/span> -e
go &lt;span style="color:#204a87">test&lt;/span> ./...
go build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In turn, the above shell script is executed as the Docker entrypoint for the container:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">docker run --entrypoint&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>build.sh golang
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Concepts: Detach</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/detach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/detach/</guid><description>
&lt;p>The &lt;code>detach&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to run the container in a detached (headless) state.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
commands:
- go test ./...
- name: build
image: golang
commands:
- go build
- name: run
image: golang
&lt;span style="color:#00a000">+ detach: true
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- ./main -http=:8080
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Entrypoint</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/entrypoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/entrypoint/</guid><description>
&lt;p>The &lt;code>entrypoint&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide the command to execute inside the container.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ entrypoint: /usr/local/go/bin/go
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ entrypoint: /usr/local/go/bin/go
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Environment</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/environment/</guid><description>
&lt;p>The &lt;code>environment&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide variables injected into the container environment.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ environment:
&lt;/span>&lt;span style="color:#00a000">+ CGO_ENABLED: &amp;#39;0&amp;#39;
&lt;/span>&lt;span style="color:#00a000">+ GOOS: linux
&lt;/span>&lt;span style="color:#00a000">+ GOARCH: amd64
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ environment:
&lt;/span>&lt;span style="color:#00a000">+ CGO_ENABLED: &amp;#39;0&amp;#39;
&lt;/span>&lt;span style="color:#00a000">+ GOOS: linux
&lt;/span>&lt;span style="color:#00a000">+ GOARCH: amd64
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="defaults">Defaults&lt;/h2>
&lt;p>The following environment variables are injected into every step:&lt;/p>
&lt;h4 id="build-environment-variables">Build Environment Variables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_AUTHOR&lt;/code>&lt;/td>
&lt;td>&lt;code>octocat&lt;/code>&lt;/td>
&lt;td>author from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_AUTHOR_EMAIL&lt;/code>&lt;/td>
&lt;td>&lt;code>octocat@github.com&lt;/code>&lt;/td>
&lt;td>author email from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_BASE_REF&lt;/code>&lt;/td>
&lt;td>&lt;code>refs/heads/dev&lt;/code>&lt;/td>
&lt;td>reference from the base commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_BRANCH&lt;/code>&lt;/td>
&lt;td>&lt;code>master&lt;/code>&lt;/td>
&lt;td>branch from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_CHANNEL&lt;/code>&lt;/td>
&lt;td>&lt;code>vela&lt;/code>&lt;/td>
&lt;td>queue channel the build was published to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_CLONE&lt;/code>&lt;/td>
&lt;td>&lt;code>https://github.com/octocat/hello-world.git&lt;/code>&lt;/td>
&lt;td>clone url for the repository the build was triggered from&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_COMMIT&lt;/code>&lt;/td>
&lt;td>&lt;code>7fd1a60b01f91b314f59955a4e4d4e80d8edf11d&lt;/code>&lt;/td>
&lt;td>commit sha from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_CREATED&lt;/code>&lt;/td>
&lt;td>&lt;code>1556720958&lt;/code>&lt;/td>
&lt;td>unix timestamp representing build creation time&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_DISTRIBUTION&lt;/code>&lt;/td>
&lt;td>&lt;code>linux&lt;/code>&lt;/td>
&lt;td>distribution where the build was executed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_ENQUEUED&lt;/code>&lt;/td>
&lt;td>&lt;code>1556720958&lt;/code>&lt;/td>
&lt;td>unix timestamp representing build enqueued time&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_EVENT&lt;/code>&lt;/td>
&lt;td>&lt;code>push&lt;/code>&lt;/td>
&lt;td>webhook event that triggered the build&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_FINISHED&lt;/code>&lt;/td>
&lt;td>&lt;code>1556730045&lt;/code>&lt;/td>
&lt;td>unix timestamp representing build completion time&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_HOST&lt;/code>&lt;/td>
&lt;td>&lt;code>vela-worker-1&lt;/code>&lt;/td>
&lt;td>fully qualified domain name of the worker the build was executed on&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_LINK&lt;/code>&lt;/td>
&lt;td>&lt;code>https://vela-server.localhost/octocat/hello-world/1&lt;/code>&lt;/td>
&lt;td>link to the build in the UI&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_MESSAGE&lt;/code>&lt;/td>
&lt;td>&lt;code>Merge pull request #6 from octocat/patch-1&lt;/code>&lt;/td>
&lt;td>message from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_NUMBER&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>build number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_PARENT&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>previous build number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_REF&lt;/code>&lt;/td>
&lt;td>&lt;code>refs/heads/master&lt;/code>&lt;/td>
&lt;td>reference from the source commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_RUNTIME&lt;/code>&lt;/td>
&lt;td>&lt;code>docker&lt;/code>&lt;/td>
&lt;td>runtime where the build was executed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_SENDER&lt;/code>&lt;/td>
&lt;td>&lt;code>NealColeman&lt;/code>&lt;/td>
&lt;td>user who triggered the build&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_STARTED&lt;/code>&lt;/td>
&lt;td>&lt;code>1556730001&lt;/code>&lt;/td>
&lt;td>unix timestamp representing build start time&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_STATUS&lt;/code>&lt;/td>
&lt;td>&lt;code>success&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_TITLE&lt;/code>&lt;/td>
&lt;td>&lt;code>push received from https://github.com/octocat/hello-world&lt;/code>&lt;/td>
&lt;td>title for the build&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_WORKSPACE&lt;/code>&lt;/td>
&lt;td>&lt;code>/vela/src/github.com/octocat/hello-world&lt;/code>&lt;/td>
&lt;td>working directory the build is executed in&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_PULL_REQUEST&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>pull request number is populated from the source reference&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_PULL_REQUEST&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>pull request number is populated from the source reference&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_TARGET&lt;/code>&lt;/td>
&lt;td>&lt;code>production&lt;/code>&lt;/td>
&lt;td>name of target environment for the deployment&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_DEPLOYMENT&lt;/code>&lt;/td>
&lt;td>&lt;code>production&lt;/code>&lt;/td>
&lt;td>name of target environment for the deployment&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_PULL_REQUEST&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>pull request number is populated from the source reference&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_PULL_REQUEST&lt;/code>&lt;/td>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>pull request number is populated from the source reference&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_PULL_REQUEST_SOURCE&lt;/code>&lt;/td>
&lt;td>&lt;code>dev&lt;/code>&lt;/td>
&lt;td>pull request branch from the source reference&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_PULL_REQUEST_TARGET&lt;/code>&lt;/td>
&lt;td>&lt;code>master&lt;/code>&lt;/td>
&lt;td>pull request branch for the target reference&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_BUILD_TAG&lt;/code>&lt;/td>
&lt;td>&lt;code>v1.0.0&lt;/code>&lt;/td>
&lt;td>tag is populated from the source reference&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="vela-environment-variables">Vela Environment Variables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>environment is Vela&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_ADDR&lt;/code>&lt;/td>
&lt;td>&lt;code>vela-server.localhost&lt;/code>&lt;/td>
&lt;td>fully qualified domain name of the Vela server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_CHANNEL&lt;/code>&lt;/td>
&lt;td>&lt;code>vela&lt;/code>&lt;/td>
&lt;td>queue channel the build was published to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_DATABASE&lt;/code>&lt;/td>
&lt;td>&lt;code>postgres&lt;/code>&lt;/td>
&lt;td>database Vela is connected to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_HOST&lt;/code>&lt;/td>
&lt;td>&lt;code>vela-worker-1&lt;/code>&lt;/td>
&lt;td>fully qualified domain name of the worker the build was executed on&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_QUEUE&lt;/code>&lt;/td>
&lt;td>&lt;code>redis&lt;/code>&lt;/td>
&lt;td>queue build was published to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_RUNTIME&lt;/code>&lt;/td>
&lt;td>&lt;code>docker&lt;/code>&lt;/td>
&lt;td>runtime environment build was executed in&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_SOURCE&lt;/code>&lt;/td>
&lt;td>&lt;code>github&lt;/code>&lt;/td>
&lt;td>queue channel the build was published to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_VERSION&lt;/code>&lt;/td>
&lt;td>&lt;code>v0.1.0&lt;/code>&lt;/td>
&lt;td>Vela version&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_WORKSPACE&lt;/code>&lt;/td>
&lt;td>&lt;code>/vela/src/github.com/github/octocat/hello-world&lt;/code>&lt;/td>
&lt;td>working directory the build is executed in&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CI&lt;/code>&lt;/td>
&lt;td>&lt;code>vela&lt;/code>&lt;/td>
&lt;td>CI enabled is Vela&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="repository-environment-variables">Repository Environment Variables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ACTIVE&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>active setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ALLOW_COMMENT&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>comment enabled setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ALLOW_DEPLOY&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>deploy enabled setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ALLOW_PULL&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>pull enabled setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ALLOW_PUSH&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>push enabled setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ALLOW_TAG&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>tag enabled setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_BRANCH&lt;/code>&lt;/td>
&lt;td>&lt;code>master&lt;/code>&lt;/td>
&lt;td>default branch of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_CLONE&lt;/code>&lt;/td>
&lt;td>&lt;code>https://github.com/octocat/hello-world.git&lt;/code>&lt;/td>
&lt;td>clone url of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_FULL_NAME&lt;/code>&lt;/td>
&lt;td>&lt;code>octocat/hello-world&lt;/code>&lt;/td>
&lt;td>full name of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_LINK&lt;/code>&lt;/td>
&lt;td>&lt;code>https://github.com/octocat/hello-world&lt;/code>&lt;/td>
&lt;td>direct url of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_NAME&lt;/code>&lt;/td>
&lt;td>&lt;code>hello-world&lt;/code>&lt;/td>
&lt;td>name of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_ORG&lt;/code>&lt;/td>
&lt;td>&lt;code>octocat&lt;/code>&lt;/td>
&lt;td>org of the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_PRIVATE&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>privacy setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_TIMEOUT&lt;/code>&lt;/td>
&lt;td>&lt;code>30&lt;/code>&lt;/td>
&lt;td>timeout setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_TRUSTED&lt;/code>&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;td>trusted setting for the repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_REPO_VISIBILITY&lt;/code>&lt;/td>
&lt;td>&lt;code>public&lt;/code>&lt;/td>
&lt;td>visibility setting for the repository&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="user-environment-variables">User Environment Variables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VELA_USER_ACTIVE&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>active setting for the user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_USER_ADMIN&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>admin platform status for the user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_USER_FAVORITES&lt;/code>&lt;/td>
&lt;td>&lt;code>[ &amp;quot;octocat/hello-world&amp;quot; ]&lt;/code>&lt;/td>
&lt;td>favorites starred for the user&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VELA_USER_NAME&lt;/code>&lt;/td>
&lt;td>&lt;code>Octocat&lt;/code>&lt;/td>
&lt;td>user handle setting for the user&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Concepts: Image</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/image/</guid><description>
&lt;p>The &lt;code>image&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide the &lt;a href="https://docs.docker.com/engine/docker-overview/#images">Docker image&lt;/a> used to create the ephemeral container.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="options">Options&lt;/h2>
&lt;p>Any valid &lt;a href="https://docs.docker.com/engine/docker-overview/#images">Docker image&lt;/a> in any publicly accessible &lt;a href="https://docs.docker.com/registry/">Docker registry&lt;/a> can be used for the container.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">golang&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">golang:latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">golang:1.12&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">library/golang:1.12&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">index.docker.io/library/golang&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">index.docker.io/library/golang:1.12&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Parameters</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/parameters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/parameters/</guid><description>
&lt;p>The &lt;code>parameters&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide extra configuration variables for a plugin.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: plugin
image: target/vela-docker:v0.1.0
pull: true
&lt;span style="color:#00a000">+ parameters:
&lt;/span>&lt;span style="color:#00a000">+ registry: index.docker.io
&lt;/span>&lt;span style="color:#00a000">+ repo: index.docker.io/octocat/hello-world
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Privileged</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/privileged/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/privileged/</guid><description>
&lt;p>The &lt;code>privileged&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to run the container with extra privileges.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ privileged: true
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ privileged: true
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Pull</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/pull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/pull/</guid><description>
&lt;p>The &lt;code>pull&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to automatically upgrade to the latest version of the &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/image/">image&lt;/a>.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ pull: true
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ pull: true
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Ruleset</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/ruleset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/ruleset/</guid><description>
&lt;p>The &lt;code>ruleset&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide conditions to limit the execution of the container.&lt;/p>
&lt;h2 id="simple">Simple&lt;/h2>
&lt;h4 id="fields">Fields&lt;/h4>
&lt;p>The following fields are used to configure the simple version of the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>branch&lt;/code>&lt;/td>
&lt;td>name of branch for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>comment&lt;/code>&lt;/td>
&lt;td>pull request comment body&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>event&lt;/code>&lt;/td>
&lt;td>name of event for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>path to workspace files for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>repo&lt;/code>&lt;/td>
&lt;td>name of repo for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>status&lt;/code>&lt;/td>
&lt;td>name of status for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>tag&lt;/code>&lt;/td>
&lt;td>name of reference for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>target&lt;/code>&lt;/td>
&lt;td>name of deployment target for build&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="syntax">Syntax&lt;/h4>
&lt;p>The following is an example of valid syntax for the simple version of the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ ruleset:
&lt;/span>&lt;span style="color:#00a000">+ branch: master
&lt;/span>&lt;span style="color:#00a000">+ event: push
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ ruleset:
&lt;/span>&lt;span style="color:#00a000">+ branch: master
&lt;/span>&lt;span style="color:#00a000">+ event: push
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="advanced">Advanced&lt;/h2>
&lt;h4 id="fields-1">Fields&lt;/h4>
&lt;p>The following fields are used to configure the advanced version of the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>continue&lt;/code>&lt;/td>
&lt;td>enables continuing the build if the step fails&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>if&lt;/code>&lt;/td>
&lt;td>limits the step execution to all rules must match&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>matcher&lt;/code>&lt;/td>
&lt;td>matcher to use when evaluating the ruleset&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>operator&lt;/code>&lt;/td>
&lt;td>operator to use when evaluating the ruleset&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>unless&lt;/code>&lt;/td>
&lt;td>limits the step execution to no rules can match&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="syntax-1">Syntax&lt;/h4>
&lt;p>The following is an example of valid syntax for the advanced version of the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ ruleset:
&lt;/span>&lt;span style="color:#00a000">+ if:
&lt;/span>&lt;span style="color:#00a000">+ branch: master
&lt;/span>&lt;span style="color:#00a000">+ event: push
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ ruleset:
&lt;/span>&lt;span style="color:#00a000">+ unless:
&lt;/span>&lt;span style="color:#00a000">+ branch: master
&lt;/span>&lt;span style="color:#00a000">+ event: push
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="ruleset-type-appendix">Ruleset type Appendix&lt;/h2>
&lt;h4 id="branch">Branch&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching build branches&lt;/strong>. The below example will run a step if the build branch is &lt;code>stage&lt;/code> or &lt;code>master&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">branch&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">stage, master ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="event">Event&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching build events&lt;/strong>. The below example will run a step if the build event is &lt;code>push&lt;/code> or &lt;code>pull_request&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">event&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push, pull_request ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="status">Status&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching build statuses&lt;/strong>. The below example will run a step if the build status is &lt;code>failure&lt;/code> or &lt;code>success&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">status&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">failure, success ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="tag">Tag&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching build references&lt;/strong>. The below example will run a step if the build ref is &lt;code>dev/*&lt;/code> or &lt;code>test/*&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tag&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">dev/*, test/* ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="target">Target&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching build deployment targets&lt;/strong>. The below example will run a step if the build target is &lt;code>stage&lt;/code> or &lt;code>production&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">target&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">stage, production ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="path">Path&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching files changed in a repository&lt;/strong>. The below example will run a step if file &lt;code>README.md&lt;/code>, any file of type &lt;code>*.md&lt;/code> in the root directory or any file in the &lt;code>test/*&lt;/code> directory has changed:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">README.md, &amp;#34;*.md&amp;#34;, &amp;#34;test/*&amp;#34; ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="comment">Comment&lt;/h4>
&lt;p>This rule type limits the execution of a step to &lt;strong>matching a pull request comment&lt;/strong>. This extends the ability to start new builds through interactions within a pull request. The below example will run a step if a &amp;ldquo;run build&amp;rdquo; comment is added to the bottom of a pull request.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">ruleset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">event&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">comment ]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">comment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;run build&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Concepts: Secrets</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/secrets/</guid><description>
&lt;p>The &lt;code>secrets&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide sensitive variables injected into the container environment.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="simple">Simple&lt;/h2>
&lt;p>The following is an example of valid syntax for the simple version of the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ secrets: [ git_username, git_password ]
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- echo &amp;#34;machine github.com&amp;#34; &amp;gt; .netrc
- echo &amp;#34;login ${GIT_USERNAME}&amp;#34; &amp;gt; .netrc
- echo &amp;#34;password ${GIT_PASSWORD}&amp;#34; &amp;gt; .netrc
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ secrets: [ git_username, git_password ]
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- echo &amp;#34;machine github.com&amp;#34; &amp;gt; .netrc
- echo &amp;#34;login ${GIT_USERNAME}&amp;#34; &amp;gt; .netrc
- echo &amp;#34;password ${GIT_PASSWORD}&amp;#34; &amp;gt; .netrc
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="advanced">Advanced&lt;/h2>
&lt;h4 id="fields">Fields&lt;/h4>
&lt;p>The following fields are used to configure the advanced version of the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>source&lt;/code>&lt;/td>
&lt;td>secret from pipeline to rename for step&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>target&lt;/code>&lt;/td>
&lt;td>target name for variable to inject for step&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="syntax">Syntax&lt;/h4>
&lt;p>The following is an example of valid syntax for the advanced version of the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
steps:
- name: test
image: golang
&lt;span style="color:#00a000">+ secrets:
&lt;/span>&lt;span style="color:#00a000">+ - source: username
&lt;/span>&lt;span style="color:#00a000">+ target: git_username
&lt;/span>&lt;span style="color:#00a000">+ - source: password
&lt;/span>&lt;span style="color:#00a000">+ target: git_password
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- echo &amp;#34;machine github.com&amp;#34; &amp;gt; .netrc
- echo &amp;#34;login ${GIT_USERNAME}&amp;#34; &amp;gt; .netrc
- echo &amp;#34;password ${GIT_PASSWORD}&amp;#34; &amp;gt; .netrc
- go test ./...
- name: build
image: golang
&lt;span style="color:#00a000">+ secrets:
&lt;/span>&lt;span style="color:#00a000">+ - source: username
&lt;/span>&lt;span style="color:#00a000">+ target: git_username
&lt;/span>&lt;span style="color:#00a000">+ - source: password
&lt;/span>&lt;span style="color:#00a000">+ target: git_password
&lt;/span>&lt;span style="color:#00a000">&lt;/span> commands:
- echo &amp;#34;machine github.com&amp;#34; &amp;gt; .netrc
- echo &amp;#34;login ${GIT_USERNAME}&amp;#34; &amp;gt; .netrc
- echo &amp;#34;password ${GIT_PASSWORD}&amp;#34; &amp;gt; .netrc
- go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Template</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/template/</guid><description>
&lt;p>The &lt;code>template&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide the name of template to expand in the pipeline.&lt;/p>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>unique identifier for the template in the pipeline&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>vars&lt;/code>&lt;/td>
&lt;td>variables injected into the template&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
templates
- name: template
source: github.com/vela/atlas/cmd
type: github
steps:
- name: test
&lt;span style="color:#00a000">+ template:
&lt;/span>&lt;span style="color:#00a000">+ name: template
&lt;/span>&lt;span style="color:#00a000">+ vars:
&lt;/span>&lt;span style="color:#00a000">+ cmd: go test ./...
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
- name: build
&lt;span style="color:#00a000">+ template:
&lt;/span>&lt;span style="color:#00a000">+ name: template
&lt;/span>&lt;span style="color:#00a000">+ vars:
&lt;/span>&lt;span style="color:#00a000">+ cmd: go build
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item></channel></rss>