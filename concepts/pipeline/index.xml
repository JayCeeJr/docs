<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vela â€“ Pipeline</title><link>https://go-vela.github.io/docs/concepts/pipeline/</link><description>Recent content in Pipeline on Vela</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://go-vela.github.io/docs/concepts/pipeline/index.xml" rel="self" type="application/rss+xml"/><item><title>Concepts: Metadata</title><link>https://go-vela.github.io/docs/concepts/pipeline/metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/metadata/</guid><description>
&lt;p>The &lt;code>metadata&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows extra information to be passed to the pipeline.&lt;/p>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>template&lt;/code>&lt;/td>
&lt;td>enables compiling the pipeline as a template&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for a &lt;code>metadata&lt;/code> declaration:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
&lt;span style="color:#00a000">+metadata:
&lt;/span>&lt;span style="color:#00a000">+ template: false
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
steps:
- name: test
image: golang
commands:
- go test ./...
- name: build
image: golang
commands:
- go build
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Concepts: Secrets</title><link>https://go-vela.github.io/docs/concepts/pipeline/secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/secrets/</guid><description>
&lt;p>The &lt;code>secrets&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide sensitive information into the pipeline.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Secrets are always retrieved at the beginning of a pipeline before any services, stages or steps are created or started. They are extremely useful when you don&amp;rsquo;t want to provide sensitive information in plain text.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>engine&lt;/code>&lt;/td>
&lt;td>name of storage backend to fetch secret from&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>key&lt;/code>&lt;/td>
&lt;td>path to secret to fetch from storage backend&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>name of secret to reference in the pipeline&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code>&lt;/td>
&lt;td>type of secret to fetch from storage backend&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>origin&lt;/code>&lt;/td>
&lt;td>look up a secret via running a secret plugin&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+secrets:
&lt;/span>&lt;span style="color:#00a000">+ - name: username
&lt;/span>&lt;span style="color:#00a000">+ engine: native
&lt;/span>&lt;span style="color:#00a000">+ key: username
&lt;/span>&lt;span style="color:#00a000">+ type: repo
&lt;/span>&lt;span style="color:#00a000">+ - name: password
&lt;/span>&lt;span style="color:#00a000">+ engine: native
&lt;/span>&lt;span style="color:#00a000">+ key: password
&lt;/span>&lt;span style="color:#00a000">+ type: repo
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
steps:
- name: test
image: golang
secrets: [ username, password ]
commands:
- echo &amp;#34;machine github.com&amp;#34; &amp;gt; .netrc
- echo &amp;#34;login ${USERNAME}&amp;#34; &amp;gt;&amp;gt; .netrc
- echo &amp;#34;password ${PASSWORD}&amp;#34; &amp;gt;&amp;gt; .netrc
- go test ./...
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Services</title><link>https://go-vela.github.io/docs/concepts/pipeline/services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/services/</guid><description>
&lt;p>The &lt;code>services&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide detached (headless), execution instructions for a pipeline.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Services are always executed, in parallel inside an ephemeral &lt;a href="https://www.docker.com/resources/what-container">Docker container&lt;/a>. They are extremely useful when your testing requires additional services such as a cache, database or queue.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>entrypoint&lt;/code>&lt;/td>
&lt;td>command to execute inside the container&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>environment&lt;/code>&lt;/td>
&lt;td>variables injected into the container environment&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>image&lt;/code>&lt;/td>
&lt;td>Docker image used to create ephemeral container&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>unique identifier for the container in the pipeline&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ports&lt;/code>&lt;/td>
&lt;td>list of ports to map for the container in the pipeline&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pull&lt;/code>&lt;/td>
&lt;td>enable pulling the latest version of the image&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+services:
&lt;/span>&lt;span style="color:#00a000">+ - name: postgres
&lt;/span>&lt;span style="color:#00a000">+ image: postgres:12
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
steps:
- name: test
image: golang
environment:
DATABASE_DRIVER: postgres
DATABASE_CONFIG: &amp;#39;postgres://postgres@postgres:5432/postgres?sslmode=disable&amp;#39;
commands:
- go test ./...
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Stages</title><link>https://go-vela.github.io/docs/concepts/pipeline/stages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/stages/</guid><description>
&lt;p>The &lt;code>stages&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide parallel, execution instructions for a pipeline.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Stages are always executed, in parallel, and are comprised of one or many &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">steps&lt;/a>.&lt;/p>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>unique identifier for the stage in the pipeline&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>needs&lt;/code>&lt;/td>
&lt;td>stages that must complete before starting the current one&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>steps&lt;/code>&lt;/td>
&lt;td>sequential execution instructions for the stage&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+stages:
&lt;/span>&lt;span style="color:#00a000">+ test:
&lt;/span>&lt;span style="color:#00a000">+ steps:
&lt;/span>&lt;span style="color:#00a000">+ - name: test
&lt;/span>&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">+ commands:
&lt;/span>&lt;span style="color:#00a000">+ - go test ./...
&lt;/span>&lt;span style="color:#00a000">+ build:
&lt;/span>&lt;span style="color:#00a000">+ steps:
&lt;/span>&lt;span style="color:#00a000">+ - name: build
&lt;/span>&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">+ commands:
&lt;/span>&lt;span style="color:#00a000">+ - go build
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Steps</title><link>https://go-vela.github.io/docs/concepts/pipeline/steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/steps/</guid><description>
&lt;p>The &lt;code>steps&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide sequential, execution instructions for a pipeline.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Steps are always executed, in the order they are defined, inside an ephemeral &lt;a href="https://www.docker.com/resources/what-container">Docker container&lt;/a>.&lt;/p>
&lt;p>If the container returns a non-zero exit code, the build immediately terminates and returns a failure status.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>commands&lt;/code>&lt;/td>
&lt;td>execution instructions to run inside the container&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>detach&lt;/code>&lt;/td>
&lt;td>enables running the container in a headless mode&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>entrypoint&lt;/code>&lt;/td>
&lt;td>command to execute inside the container&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>environment&lt;/code>&lt;/td>
&lt;td>variables injected into the container environment&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>image&lt;/code>&lt;/td>
&lt;td>Docker image used to create ephemeral container&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>unique identifier for the container in the pipeline&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>parameters&lt;/code>&lt;/td>
&lt;td>extra configuration variables for a plugin&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>privileged&lt;/code>&lt;/td>
&lt;td>enables running the container with extra privileges&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pull&lt;/code>&lt;/td>
&lt;td>enable pulling the latest version of the image&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ruleset&lt;/code>&lt;/td>
&lt;td>conditions to limit the execution of the container&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>secrets&lt;/code>&lt;/td>
&lt;td>sensitive variables injected into the container environment&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>template&lt;/code>&lt;/td>
&lt;td>name of template to expand in the pipeline&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+steps:
&lt;/span>&lt;span style="color:#00a000">+ - name: test
&lt;/span>&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">+ commands:
&lt;/span>&lt;span style="color:#00a000">+ - go test ./...
&lt;/span>&lt;span style="color:#00a000">+
&lt;/span>&lt;span style="color:#00a000">+ - name: build
&lt;/span>&lt;span style="color:#00a000">+ image: golang
&lt;/span>&lt;span style="color:#00a000">+ commands:
&lt;/span>&lt;span style="color:#00a000">+ - go build
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Template</title><link>https://go-vela.github.io/docs/concepts/pipeline/templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/templates/</guid><description>
&lt;p>The &lt;code>template&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/steps/">step&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide the name of template to expand in the pipeline.&lt;/p>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>name&lt;/code>&lt;/td>
&lt;td>unique identifier for the template in the pipeline&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>source&lt;/code>&lt;/td>
&lt;td>path to template in remote system&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>type&lt;/code>&lt;/td>
&lt;td>type of template provided from the remote system&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+templates
&lt;/span>&lt;span style="color:#00a000">+ - name: template
&lt;/span>&lt;span style="color:#00a000">+ source: github.com/vela/atlas/cmd
&lt;/span>&lt;span style="color:#00a000">+ type: github
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
steps:
- name: test
template:
name: template
vars:
cmd: go test ./...
- name: build
template:
name: template
vars:
cmd: go build
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item><item><title>Concepts: Version</title><link>https://go-vela.github.io/docs/concepts/pipeline/version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/version/</guid><description>
&lt;p>The &lt;code>version&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to provide the syntax version used to evaluate the pipeline.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for a &lt;code>version&lt;/code> declaration:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">&lt;span style="color:#00a000">+version: &amp;#34;1&amp;#34;
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
metadata:
template: false
steps:
- name: test
image: golang
commands:
- go test ./...
- name: build
image: golang
commands:
- go build
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Concepts: Worker</title><link>https://go-vela.github.io/docs/concepts/pipeline/worker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://go-vela.github.io/docs/concepts/pipeline/worker/</guid><description>
&lt;p>The &lt;code>worker&lt;/code> component is a part of a &lt;a href="https://go-vela.github.io/docs/docs/concepts/pipeline/">pipeline&lt;/a> for Vela.&lt;/p>
&lt;p>This declaration allows you to route your build to a subset of workers within a Vela cluster.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;p>Routing can guarantee a build is ran on a specific platform or runtime within a cluster. This may be extremely useful when your building artifacts that can only be built on specific architectures.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;p>The following fields are used to configure the component:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Required&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>platform&lt;/code>&lt;/td>
&lt;td>run a build on a specific platform available within the cluster&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>flavor&lt;/code>&lt;/td>
&lt;td>run a build on a flavor of workers within platform&lt;/td>
&lt;td>&lt;code>false&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>The following is an example of valid syntax for the component:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-diff" data-lang="diff">version: &amp;#34;1&amp;#34;
metadata:
template: false
&lt;span style="color:#00a000">+worker:
&lt;/span>&lt;span style="color:#00a000">+ platform: docker
&lt;/span>&lt;span style="color:#00a000">+ flavor: large
&lt;/span>&lt;span style="color:#00a000">&lt;/span>
steps:
- name: test
image: golang
commands:
- go test ./...
&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-info" role="alert">
&lt;!-- raw HTML omitted -->
&lt;/div></description></item></channel></rss>